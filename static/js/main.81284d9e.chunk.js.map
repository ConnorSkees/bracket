{"version":3,"sources":["components/WinIcon/index.js","components/WinIcon/WinIcon.jsx","components/LoseIcon/index.js","components/LoseIcon/LoseIcon.jsx","components/Match/index.js","components/Match/Match.jsx","components/Bracket/Bracket.jsx","components/Bracket/index.js","components/Sandbox/Sandbox.jsx","serviceWorker.js","index.jsx"],"names":["WinIcon","state","react_default","a","createElement","check_circle_default","className","Component","LoseIcon","cancel_default","Match","_this2","this","_this$props","props","top","bottom","focusedValue","winnerPos","winPosTop","winPosBtm","winnerExists","topIcon","components_WinIcon","components_LoseIcon","btmIcon","isSolo","Boolean","undefined","toUpperCase","topClass","concat","btmClass","onMouseLeave","handleMouseOver","onMouseOver","uuidv4","require","Bracket","teams","_this","updateFocus","newFocusedValue","setState","renderMatch","matches","_this$state","isFinalMatch","length","key","components_Match","x","arr","amt","i","unshift","matchCounts","teamCount","round","layout","exceptions","0","1","2","4","6","3","8","nearestSixteen","Math","floor","generateBracket","thisRound","_pushAmount","difference","slice","groups","push","title","structuredTeams","map","team","_groupIntoColumns","window","location","hostname","match","root","document","getElementById","ReactDOM","render","components_Bracket","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.81284d9e.chunk.js","sourcesContent":["import WinIcon from './WinIcon';\r\nexport default WinIcon;\r\n","import React, { Component } from 'react';\r\nimport MdCheckCircle from 'react-icons/lib/md/check-circle';\r\nimport \"./styles.scss\";\r\n\r\nclass WinIcon extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <MdCheckCircle className={ \"win-icon\" } />\r\n    )\r\n  };\r\n}\r\n\r\nexport default WinIcon;\r\n","import LoseIcon from './LoseIcon';\r\nexport default LoseIcon;\r\n","import React, { Component } from 'react';\r\nimport MdCancel from 'react-icons/lib/md/cancel';\r\nimport \"./styles.scss\";\r\n\r\nclass LoseIcon extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <MdCancel className={ \"lose-icon\" } />\r\n    )\r\n  };\r\n}\r\n\r\nexport default LoseIcon;\r\n","import Match from './Match';\r\nexport default Match;\r\n","import React, { Component } from 'react';\r\nimport WinIcon from '../WinIcon';\r\nimport LoseIcon from '../LoseIcon';\r\n\r\nclass Match extends Component {\r\n  state = {};\r\n  render() {\r\n    let { top, bottom, focusedValue, winnerPos } = this.props;\r\n    let defaultFocusedValue = \"1095ea83-4bef-4457-9e3c-3ca762de1577\";\r\n    top = top || \"\";\r\n\r\n    let winPosTop = winnerPos === 'top';\r\n    let winPosBtm = winnerPos === 'bottom';\r\n    let winnerExists = winPosTop || winPosBtm;\r\n\r\n    let topIcon = winnerExists ? (winPosTop ? <WinIcon /> : <LoseIcon />) : \"\";\r\n    let btmIcon = winnerExists ? (winPosBtm ? <WinIcon /> : <LoseIcon />) : \"\";\r\n\r\n    let isSolo = Boolean((top && !bottom) || (!top && bottom) || bottom === undefined);\r\n    top = top.toUpperCase();\r\n    bottom = isSolo ? undefined : bottom.toUpperCase();\r\n\r\n    // console.log(focusedValue, top);\r\n\r\n    let topClass = `team-row ${(focusedValue === top) ? \"focused\" : \"\" } ${ winnerExists ? (winPosTop ? \"winner\" : \"loser\") : \"\" } ${ isSolo ? \"solo\" : \"\" }`;\r\n    let btmClass = `team-row ${(!isSolo && focusedValue === bottom) ? \"focused\" : \"\" } ${ winnerExists ? (winPosBtm ? \"winner\" : \"loser\") : \"\" }`;\r\n\r\n    return (\r\n      <div className=\"match\">\r\n          <div className=\"matchup-container\">\r\n              <div className=\"matchup-teams\">\r\n                <div onMouseLeave={ () => this.props.handleMouseOver(defaultFocusedValue)} onMouseOver={ () => this.props.handleMouseOver(top.toUpperCase())} className={ topClass }>\r\n                    <div className=\"text\">\r\n                        { topIcon } { top.toUpperCase() }\r\n                    </div>\r\n                </div>\r\n                { isSolo ? \"\" : (\r\n                  <div onMouseLeave={ () => this.props.handleMouseOver(defaultFocusedValue)} onMouseOver={ () => this.props.handleMouseOver(bottom.toUpperCase())} className={ btmClass }>\r\n                    <div className=\"text\">\r\n                        { btmIcon } { bottom.toUpperCase() }\r\n                    </div>\r\n                  </div>)\r\n                }\r\n              </div>\r\n          </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default Match;\r\n","import React, { Component } from 'react';\r\nimport Match from '../Match';\r\nimport './styles.scss';\r\n\r\nconst uuidv4 = require('uuid/v4');\r\n\r\nfunction generateBracket(teamCount) {\r\n  let round = 1;\r\n  let layout = {};\r\n  let exceptions = {\r\n    0: {1: 0},\r\n    2: {1: 1},\r\n    4: {1: 2, 2: 1},\r\n    6: {1: 3, 2: 2, 3: 1},\r\n    8: {1: 4, 2: 2, 3: 1},\r\n  };\r\n\r\n  if (teamCount < 0) {\r\n    return {1: 0};\r\n  }\r\n\r\n  if (teamCount % 2 !== 0) {\r\n    teamCount++;\r\n  }\r\n\r\n  if (exceptions[teamCount]) {\r\n    return exceptions[teamCount];\r\n  }\r\n\r\n  let nearestSixteen = 16;\r\n  while (nearestSixteen < teamCount) {\r\n    nearestSixteen *= 2;\r\n  }\r\n  nearestSixteen = Math.floor(nearestSixteen/2);\r\n  layout[1] = teamCount - (nearestSixteen % teamCount);\r\n  round += 1;\r\n  nearestSixteen = Math.floor(nearestSixteen/2);\r\n  while (nearestSixteen >= 1) {\r\n    layout[round] = nearestSixteen;\r\n    nearestSixteen = Math.floor(nearestSixteen/2);\r\n    round += 1;\r\n  }\r\n  return layout\r\n}\r\n\r\nclass Bracket extends Component {\r\n  state = {\r\n    focusedValue: \"1095ea83-4bef-4457-9e3c-3ca762de1577\",\r\n    teams: this.props.teams\r\n  };\r\n\r\n  _pushAmount(arr, amt) {\r\n    for(let i=0; i < amt; i++) {\r\n      arr.unshift({ 'top': '', 'bottom': '' });\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  _restructureTeams(teams) {\r\n      let len = teams[0].length*2;\r\n      let matchCounts = generateBracket(len);\r\n\r\n      for (let key in matchCounts){\r\n        let thisRound = teams[key-1];\r\n\r\n        if (!thisRound){\r\n          // console.log(key);\r\n          teams[key-1] = this._pushAmount([], matchCounts[key]);\r\n\r\n        } else if (thisRound.length < matchCounts[key]) {\r\n          // console.log(thisRound);\r\n          teams[key-1] = this._pushAmount(thisRound, matchCounts[key]-teams[key-1].length);\r\n\r\n        } else if (thisRound.length > matchCounts[key]) {\r\n          let difference = thisRound.length-matchCounts[key];\r\n          // console.log(key, difference);\r\n          teams[key-1] = thisRound.slice(0, thisRound.length-difference);\r\n          if (teams[key]) {\r\n            // console.log(teams[key]);\r\n            // teams[key] = thisRound.slice(thisRound.length-difference, thisRound.length)\r\n          } else {\r\n            teams[key] = thisRound.slice(thisRound.length-difference, thisRound.length)\r\n          }\r\n        } else if (thisRound.length === matchCounts[key]) {\r\n          // console.log(thisRound);\r\n        }\r\n      }\r\n    return teams;\r\n  }\r\n\r\n  _groupIntoColumns(teams) {\r\n    let groups = []\r\n    for(let i=0; i< teams.length;){\r\n      groups.push(teams.slice(i, i+2))\r\n      i += 2;\r\n    }\r\n    return groups;\r\n  }\r\n\r\n  updateFocus = (newFocusedValue) => {\r\n    let { focusedValue } = this.state;\r\n    if (newFocusedValue !== \"\" && focusedValue !== newFocusedValue) {\r\n      this.setState({ focusedValue: newFocusedValue })\r\n    }\r\n  }\r\n\r\n  renderMatch = matches => {\r\n    let { focusedValue, teams } = this.state;\r\n    let isFinalMatch = matches[0] === teams[teams.length-1][0];\r\n    return (\r\n        <div key={ uuidv4() } className={ `group ${matches.length === 1 ? \"single\" : \"\"}`}>\r\n            <div className=\"col\">\r\n              <Match handleMouseOver={ x => this.updateFocus(x) } focusedValue={ focusedValue } top={ matches[0].top } bottom={ matches[0].bottom } winnerPos={ matches[0].winnerPos }/>\r\n              { matches.length > 1\r\n                ? <Match handleMouseOver={ x => this.updateFocus(x) } focusedValue={ focusedValue } top={ matches[1].top } bottom={ matches[1].bottom } winnerPos={ matches[1].winnerPos } />\r\n                : \"\"\r\n              }\r\n            </div>\r\n            { isFinalMatch ? \"\" : <div className=\"connector\"></div> }\r\n        </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    let { title, teams } = this.props;\r\n    let structuredTeams = teams;\r\n    // let structuredTeams = this._restructureTeams(teams);\r\n    return (\r\n      <div className=\"ui-popup-container\">\r\n          <div className=\"bracket-view showing-bracket\">\r\n              <div className=\"bracket-full-wrapper\">\r\n                  <div className=\"v2-bracket bracket-content\">\r\n                      <div className=\"bracket-region\">\r\n                        { structuredTeams.map(team => {\r\n                          return (\r\n                            <div key={ uuidv4() } className=\"bracket-round\">\r\n                              <div className=\"matchups\">\r\n                                { this._groupIntoColumns(team).map(this.renderMatch) }\r\n                              </div>\r\n                            </div>\r\n                          )\r\n                        }) }\r\n                        <div className=\"region-name\">\r\n                          <h3>{ title || \"Placeholder Title\" }</h3>\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      )\r\n  };\r\n}\r\n\r\nexport default Bracket;\r\n","import Bracket from './Bracket';\r\nexport default Bracket;\r\n","import React, { Component } from 'react';\r\nimport Bracket from '../Bracket';\r\nimport \"./styles.scss\";\r\n\r\nconst uuidv4 = require('uuid/v4');\r\n\r\nclass Sandbox extends Component {\r\n  state = {\r\n    firstRoundTeams: [\r\n      {uuid: uuidv4(), value: \"\"}\r\n    ],\r\n    isDeleting: false,\r\n    isPreview: false\r\n  };\r\n\r\n  addFirstRoundTeam = () => {\r\n    let { firstRoundTeams } = this.state;\r\n    firstRoundTeams.push({uuid: uuidv4(), value: \"\"});\r\n    this.setState({ firstRoundTeams })\r\n  }\r\n\r\n  removeFirstRoundTeam = uuid => {\r\n    let { firstRoundTeams } = this.state;\r\n    firstRoundTeams = firstRoundTeams.filter(team => team.uuid !== uuid);\r\n    this.setState({ firstRoundTeams });\r\n  }\r\n\r\n  updateTeamName = (e, uuid) => {\r\n    let { firstRoundTeams } = this.state;\r\n    firstRoundTeams = firstRoundTeams.map(team => {\r\n      if (team.uuid === uuid){\r\n        team.value = e.target.value;\r\n      }\r\n      return team;\r\n    });\r\n    this.setState({ firstRoundTeams });\r\n  }\r\n\r\n  _organizeTeams(){\r\n    let teams = this.state.firstRoundTeams.map(x => x.value);\r\n    let rounds = []\r\n    for(let i=0; i < teams.length;){\r\n      let dict = {\"top\": teams[i]||\"\"};\r\n      if (i+1 < teams.length) {dict[\"bottom\"] = teams[i+1]||\"\";}\r\n      if (i+1 >= teams.length) {dict[\"winnerPos\"] = \"top\"}\r\n      // console.log(dict);\r\n      rounds.push(dict)\r\n      i += 2;\r\n    }\r\n    return rounds;\r\n  }\r\n\r\n  render() {\r\n    let { firstRoundTeams, isDeleting, isPreview } = this.state;\r\n    // console.log(this._organizeTeams());\r\n    if (isPreview) {\r\n      return <Bracket teams={ [this._organizeTeams()] } title={ \"March Madness 2019\" } />\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <div className={ \"sandbox-container\" }>\r\n          <div className={ \"flex-column\" }>\r\n            <label htmlFor=\"title\">Bracket Title</label>\r\n            <input type=\"text\" maxLength=\"22\" id=\"title\" placeholder=\"Bracket Title\" />\r\n          </div>\r\n          <div className={ \"flex-column\" }>\r\n            <div className={ \"team-label-container\" }>\r\n              <label htmlFor=\"title\">Teams</label>\r\n              <button type=\"button\" onClick={ this.addFirstRoundTeam } className={ \"button button-positive\" } >+</button>\r\n              <button type=\"button\" onClick={ () => this.setState({isDeleting:!isDeleting}) } className={ \"button button-negative\" } >-</button>\r\n              <button type=\"button\" onClick={ () => this.setState({isPreview:true}) } className={ \"button button-preview\" }>Preview</button>\r\n            </div>\r\n\r\n            { firstRoundTeams.map((entry, idx) => {\r\n              return <input type=\"text\" style={{ display: \"none\" }} key={ entry.uuid } onChange={ val => this.updateTeamName(val, entry.uuid) } onClick={isDeleting ? () => this.removeFirstRoundTeam(entry.uuid) : () => {} } maxLength=\"22\" id=\"title\" placeholder={ `Team ${idx+1}`} />\r\n            }) }\r\n          </div>\r\n        </div>\r\n        <Bracket teams={ [this._organizeTeams()] } title={ \"March Madness 2019\" } />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sandbox;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sandbox from './components/Sandbox';\nimport Bracket from './components/Bracket';\nimport './styles.scss';\nimport * as serviceWorker from './serviceWorker';\n\nconst root = document.getElementById('root');\nconst teams = [\n  [\n    {'top': 'Duke', 'bottom': 'Albany', 'winnerPos': 'top'},\n    {'top': 'Colorado State', 'bottom': 'Harvard', 'winnerPos': 'top'},\n    {'top': 'Oklahoma State', 'bottom': 'Oregon', 'winnerPos': 'bottom'},\n    {'top': 'Saint Louis', 'bottom': 'New Mexico State', 'winnerPos': 'top'},\n    {'top': 'Memphis', 'bottom': 'St. Mary\\'s', 'winnerPos': 'top'},\n    {'top': 'Michigan State', 'bottom': 'Valparaiso', 'winnerPos': 'top'},\n    // {'top': 'Creighton', 'bottom': 'Cincinnati', 'winnerPos': 'top'},\n  ],\n  [\n    {'top': 'Duke', 'bottom': 'Colorado State', 'winnerPos': 'top'},\n    {'top': 'Oregon', 'bottom': 'Saint Louis', 'winnerPos': 'bottom'},\n    {'top': 'Memphis', 'bottom': 'Michigan State', 'winnerPos': 'top'},\n    {'top': 'Creighton', 'bottom': 'Cincinnati', 'winnerPos': 'top'},\n  ],\n  [\n    {'top': 'Duke', 'bottom': 'Saint Louis', 'winnerPos': 'top'},\n    {'top': 'Memphis', 'bottom': 'Creighton', 'winnerPos': 'top'},\n  ],\n  [\n    {'top': 'Duke', 'bottom': 'Memphis', 'winnerPos': 'bottom'},\n  ],\n]\n\n\nReactDOM.render(<Bracket teams={teams}/>, root);\n// ReactDOM.render(<Sandbox />, root);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}